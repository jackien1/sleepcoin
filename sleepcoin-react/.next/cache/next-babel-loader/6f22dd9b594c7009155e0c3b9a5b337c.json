{"ast":null,"code":"var _jsxFileName = \"/Users/jackieni/dev/hackathon/sleepcoin/sleepcoin-react/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport { setCurrentUser, logoutUser } from \"../redux/actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { initStore } from \"../redux/store\";\nexport default withRedux(initStore)(class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx,\n    store\n  }) {\n    return {\n      pageProps: Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      const decoded = jwt_decode(localStorage.jwtToken);\n      this.props.store.dispatch(setCurrentUser(decoded));\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        this.props.store.dispatch(logoutUser());\n        window.location.href = \"/\";\n      }\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })))));\n  }\n\n});","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/sleepcoin/sleepcoin-react/pages/_app.js"],"names":["React","Provider","App","Container","withRedux","setCurrentUser","logoutUser","jwt_decode","initStore","MyApp","getInitialProps","Component","ctx","store","pageProps","componentDidMount","localStorage","jwtToken","decoded","props","dispatch","currentTime","Date","now","exp","window","location","href","setState","loading","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,kBAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,eAAeJ,SAAS,CAACI,SAAD,CAAT,CACb,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AACtB,eAAaQ,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA;AAAlB,GAA7B,EAAwD;AACtD,WAAO;AACLC,MAAAA,SAAS,EAAEH,SAAS,CAACD,eAAV,GACP,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADC,GAEP;AAHC,KAAP;AAKD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB,YAAMC,OAAO,GAAGX,UAAU,CAACS,YAAY,CAACC,QAAd,CAA1B;AACA,WAAKE,KAAL,CAAWN,KAAX,CAAiBO,QAAjB,CAA0Bf,cAAc,CAACa,OAAD,CAAxC;AACA,YAAMG,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,UAAIL,OAAO,CAACM,GAAR,GAAcH,WAAlB,EAA+B;AAC7B,aAAKF,KAAL,CAAWN,KAAX,CAAiBO,QAAjB,CAA0Bd,UAAU,EAApC;AACAmB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AACF;;AAED,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,SAAF;AAAaG,MAAAA,SAAb;AAAwBD,MAAAA;AAAxB,QAAkC,KAAKM,KAA7C;AACA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF,CADF;AASD;;AAlCqB,CADX,CAAf","sourcesContent":["import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport { setCurrentUser, logoutUser } from \"../redux/actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { initStore } from \"../redux/store\";\n\nexport default withRedux(initStore)(\n  class MyApp extends App {\n    static async getInitialProps({ Component, ctx, store }) {\n      return {\n        pageProps: Component.getInitialProps\n          ? await Component.getInitialProps(ctx)\n          : {}\n      };\n    }\n\n    componentDidMount() {\n      if (localStorage.jwtToken) {\n        const decoded = jwt_decode(localStorage.jwtToken);\n        this.props.store.dispatch(setCurrentUser(decoded));\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n          this.props.store.dispatch(logoutUser());\n          window.location.href = \"/\";\n        }\n      }\n\n      this.setState({ loading: false });\n    }\n\n    render() {\n      const { Component, pageProps, store } = this.props;\n      return (\n        <Container>\n          <Provider store={store}>\n            <React.Fragment>\n              <Component {...pageProps} />\n            </React.Fragment>\n          </Provider>\n        </Container>\n      );\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}