{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/tag/style/css\";\nimport _Tag from \"antd/lib/tag\";\nvar _jsxFileName = \"/Users/jackieni/dev/hackathon/sleepcoin/sleepcoin-react/pages/dashboard.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logoutUser, getUser } from \"../redux/actions\";\nimport Router from \"next/router\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderAddress\", () => {\n      if (this.props.auth.isAuthenticated) {\n        return this.props.auth.user.address;\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.props.getUser();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        width: \"100vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"4vw\",\n        fontFamily: \"BlinkMacSystemFont\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Dashboard\"), __jsx(_Tag, {\n      color: \"magenta\",\n      style: {\n        marginTop: \"1vw\",\n        fontSize: \"1vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Address \", this.renderAddress()), __jsx(_Tag, {\n      color: \"red\",\n      style: {\n        marginTop: \"1vw\",\n        fontSize: \"1vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Balance\"), __jsx(_Tag, {\n      color: \"volcano\",\n      style: {\n        marginTop: \"1vw\",\n        fontSize: \"1vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Ether Address\"), __jsx(_Tag, {\n      color: \"orange\",\n      style: {\n        marginTop: \"1vw\",\n        fontSize: \"1vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Ether Balance\"), __jsx(_Button, {\n      type: \"link\",\n      style: {\n        fontSize: \"1vw\",\n        color: \"red\"\n      },\n      onClick: () => this.props.logoutUser(() => {\n        Router.push(\"/\");\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Logout\"), __jsx(\"div\", {\n      style: {\n        fontSize: \"2vw\",\n        fontFamily: \"BlinkMacSystemFont\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Campaigns\"), __jsx(_Button, {\n      type: \"link\",\n      style: {\n        fontSize: \"1vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", \"Create Campaign\", \" \"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    auth\n  } = state;\n  return {\n    auth\n  };\n};\n\nexport default connect(null, {\n  logoutUser,\n  getUser\n})(Dashboard);","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/sleepcoin/sleepcoin-react/pages/dashboard.js"],"names":["React","Component","connect","logoutUser","getUser","Router","Dashboard","props","auth","isAuthenticated","user","address","componentWillMount","render","display","justifyContent","alignItems","flexDirection","height","width","fontWeight","fontSize","fontFamily","marginTop","renderAddress","color","push","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Tag, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { logoutUser, getUser } from \"../redux/actions\";\nimport Router from \"next/router\";\n\nclass Dashboard extends Component {\n  componentWillMount() {\n    this.props.getUser();\n  }\n\n  renderAddress = () => {\n    if (this.props.auth.isAuthenticated) {\n      return this.props.auth.user.address;\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          height: \"100vh\",\n          width: \"100vw\"\n        }}\n      >\n        <div\n          style={{\n            fontWeight: \"bold\",\n            fontSize: \"4vw\",\n            fontFamily: \"BlinkMacSystemFont\"\n          }}\n        >\n          Dashboard\n        </div>\n        <Tag color=\"magenta\" style={{ marginTop: \"1vw\", fontSize: \"1vw\" }}>\n          Address {this.renderAddress()}\n        </Tag>\n        <Tag color=\"red\" style={{ marginTop: \"1vw\", fontSize: \"1vw\" }}>\n          Balance\n        </Tag>\n        <Tag color=\"volcano\" style={{ marginTop: \"1vw\", fontSize: \"1vw\" }}>\n          Ether Address\n        </Tag>\n        <Tag color=\"orange\" style={{ marginTop: \"1vw\", fontSize: \"1vw\" }}>\n          Ether Balance\n        </Tag>\n        <Button\n          type=\"link\"\n          style={{ fontSize: \"1vw\", color: \"red\" }}\n          onClick={() =>\n            this.props.logoutUser(() => {\n              Router.push(\"/\");\n            })\n          }\n        >\n          Logout\n        </Button>\n        <div\n          style={{\n            fontSize: \"2vw\",\n            fontFamily: \"BlinkMacSystemFont\"\n          }}\n        >\n          Campaigns\n        </div>\n        <Button type=\"link\" style={{ fontSize: \"1vw\" }}>\n          {\" \"}\n          Create Campaign{\" \"}\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { auth } = state;\n  return { auth };\n};\n\nexport default connect(\n  null,\n  { logoutUser, getUser }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}