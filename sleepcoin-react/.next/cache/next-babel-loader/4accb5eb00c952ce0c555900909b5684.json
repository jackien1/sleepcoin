{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from \"../types\";\nconst INITIAL_STATE = {\n  user: {},\n  isAuthenticated: false,\n  campaigns: []\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER:\n      {\n        return _objectSpread({}, state, {\n          isAuthenticated: !(Object.keys(action.payload).length === 0 && action.payload.constructor === Object),\n          user: action.payload\n        });\n      }\n\n    case types.SET_CURRENT_USER:\n      {\n        return _objectSpread({}, state, {\n          campaigns: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/sleepcoin/sleepcoin-react/redux/reducers/auth_reducer.js"],"names":["types","INITIAL_STATE","user","isAuthenticated","campaigns","state","action","type","SET_CURRENT_USER","Object","keys","payload","length","constructor"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,eAAe,EAAE,KAFG;AAGpBC,EAAAA,SAAS,EAAE;AAHS,CAAtB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAK,CAACQ,gBAAX;AAA6B;AAC3B,iCACKH,KADL;AAEEF,UAAAA,eAAe,EAAE,EACfM,MAAM,CAACC,IAAP,CAAYJ,MAAM,CAACK,OAAnB,EAA4BC,MAA5B,KAAuC,CAAvC,IACAN,MAAM,CAACK,OAAP,CAAeE,WAAf,KAA+BJ,MAFhB,CAFnB;AAMEP,UAAAA,IAAI,EAAEI,MAAM,CAACK;AANf;AAQD;;AAED,SAAKX,KAAK,CAACQ,gBAAX;AAA6B;AAC3B,iCACKH,KADL;AAEED,UAAAA,SAAS,EAAEE,MAAM,CAACK;AAFpB;AAID;;AAED;AACE,aAAON,KAAP;AApBJ;AAsBD,CAvBD","sourcesContent":["import * as types from \"../types\";\n\nconst INITIAL_STATE = {\n  user: {},\n  isAuthenticated: false,\n  campaigns: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER: {\n      return {\n        ...state,\n        isAuthenticated: !(\n          Object.keys(action.payload).length === 0 &&\n          action.payload.constructor === Object\n        ),\n        user: action.payload\n      };\n    }\n\n    case types.SET_CURRENT_USER: {\n      return {\n        ...state,\n        campaigns: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}