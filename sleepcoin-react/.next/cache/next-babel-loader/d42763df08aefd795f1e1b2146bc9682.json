{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from \"../types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nexport const registerUser = (user, callback) => async dispatch => {\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:5000/api/auth/register\",\n      data: _objectSpread({}, user)\n    });\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    callback();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const loginUser = (user, callback) => async dispatch => {\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:5000/api/auth/login\",\n      data: _objectSpread({}, user)\n    });\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    callback();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: types.SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const logoutUser = callback => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  callback ? callback() : null;\n};","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/sleepcoin/sleepcoin-react/redux/actions/auth_actions.js"],"names":["types","axios","jwt_decode","registerUser","user","callback","dispatch","res","method","url","data","token","localStorage","setItem","decoded","setCurrentUser","err","console","log","loginUser","type","SET_CURRENT_USER","payload","logoutUser","removeItem","setAuthToken"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,MAAMC,QAAN,IAAkB;AAChE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAAC;AACtBO,MAAAA,MAAM,EAAE,MADc;AAEtBC,MAAAA,GAAG,EAAE,yCAFiB;AAGtBC,MAAAA,IAAI,oBAAON,IAAP;AAHkB,KAAD,CAAvB;AAMA,UAAM;AAAEO,MAAAA;AAAF,QAAYJ,GAAG,CAACG,IAAtB;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACA,UAAMG,OAAO,GAAGZ,UAAU,CAACS,KAAD,CAA1B;AACAL,IAAAA,QAAQ,CAACS,cAAc,CAACD,OAAD,CAAf,CAAR;AACAT,IAAAA,QAAQ;AACT,GAZD,CAYE,OAAOW,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAhBM;AAkBP,OAAO,MAAMG,SAAS,GAAG,CAACf,IAAD,EAAOC,QAAP,KAAoB,MAAMC,QAAN,IAAkB;AAC7D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAAC;AACtBO,MAAAA,MAAM,EAAE,MADc;AAEtBC,MAAAA,GAAG,EAAE,sCAFiB;AAGtBC,MAAAA,IAAI,oBAAON,IAAP;AAHkB,KAAD,CAAvB;AAMA,UAAM;AAAEO,MAAAA;AAAF,QAAYJ,GAAG,CAACG,IAAtB;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACA,UAAMG,OAAO,GAAGZ,UAAU,CAACS,KAAD,CAA1B;AACAL,IAAAA,QAAQ,CAACS,cAAc,CAACD,OAAD,CAAf,CAAR;AACAT,IAAAA,QAAQ;AACT,GAZD,CAYE,OAAOW,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAhBM;AAkBP,OAAO,MAAMD,cAAc,GAAGD,OAAO,IAAI;AACvC,SAAO;AACLM,IAAAA,IAAI,EAAEpB,KAAK,CAACqB,gBADP;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMS,UAAU,GAAGlB,QAAQ,IAAIC,QAAQ,IAAI;AAChDM,EAAAA,YAAY,CAACY,UAAb,CAAwB,UAAxB;AACAC,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAnB,EAAAA,QAAQ,CAACS,cAAc,CAAC,EAAD,CAAf,CAAR;AACAV,EAAAA,QAAQ,GAAGA,QAAQ,EAAX,GAAgB,IAAxB;AACD,CALM","sourcesContent":["import * as types from \"../types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const registerUser = (user, callback) => async dispatch => {\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:5000/api/auth/register\",\n      data: { ...user }\n    });\n\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    callback();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const loginUser = (user, callback) => async dispatch => {\n  try {\n    const res = await axios({\n      method: \"post\",\n      url: \"http://localhost:5000/api/auth/login\",\n      data: { ...user }\n    });\n\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    callback();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: types.SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\nexport const logoutUser = callback => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  callback ? callback() : null;\n};\n"]},"metadata":{},"sourceType":"module"}