{"version":3,"file":"static/webpack/static/development/pages/_app.js.09fc79e90404602244b7.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport { setCurrentUser, logoutUser } from \"../redux/actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { initStore } from \"../redux/store\";\nimport Router from \"next/router\";\n\nexport default withRedux(initStore)(\n  class MyApp extends App {\n    static async getInitialProps({ Component, ctx, store }) {\n      return {\n        pageProps: Component.getInitialProps\n          ? await Component.getInitialProps(ctx)\n          : {}\n      };\n    }\n\n    componentDidMount() {\n      if (localStorage.jwtToken) {\n        const decoded = jwt_decode(localStorage.jwtToken);\n        this.props.store.dispatch(setCurrentUser(decoded));\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n          this.props.store.dispatch(logoutUser());\n          window.location.href = \"/\";\n        } else {\n          Router.push(\"/dashboard\");\n        }\n      }\n\n      this.setState({ loading: false });\n    }\n\n    render() {\n      const { Component, pageProps, store } = this.props;\n      return (\n        <Container>\n          <Provider store={store}>\n            <React.Fragment>\n              <Component {...pageProps} />\n            </React.Fragment>\n          </Provider>\n        </Container>\n      );\n    }\n  }\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAxBA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;A","sourceRoot":""}